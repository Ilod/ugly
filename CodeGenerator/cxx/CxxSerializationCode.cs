// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace ugly.CodeGenerator.cxx
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class CxxSerializationCode : CxxSerializationCodeBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("#include \"Serializer.h\"\r\n#include <cctype>\r\n#include <sstream>\r\n\r\nnamespace ugly\r" +
                    "\n{\r\n    namespace ");
            
            #line 12 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.Namespace)));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        void Serializer::IdMap::Clear()\r\n        {");
            
            #line 15 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

foreach (GameClass c in CxxHelper.Definition.Class.Values)
{
    if (c.HasId && !c.Id.Index)
    {
        
            
            #line default
            #line hidden
            this.Write("\r\n                ");
            
            #line 22 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(c.Name)));
            
            #line default
            #line hidden
            this.Write(".clear();");
            
            #line 22 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

    }
}

            
            #line default
            #line hidden
            this.Write(@"
        }

        namespace
        {
            template<class T> T ReadNext(const char*& buf)
            {
                std::uint64_t data = 0;
                bool negative = false;
                if (*buf == '-')
                {
                    negative = true;
                    ++buf;
                }
                while (std::isdigit(*buf))
                {
                    data *= 10;
                    data += ((*buf) - '0');
                }
                if (*buf)
                    ++buf;
                if (negative)
                    return static_cast<T>(-static_cast<std::int64_t>(data));
                return static_cast<T>(data);
            }

            template<typename T> void SerializeInternal(T& data, std::stringstream& buffer, Serializer::IdMap& ids, ");
            
            #line 52 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.GameSetup)));
            
            #line default
            #line hidden
            this.Write("& gameSetup, ");
            
            #line 52 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.PlayerSetup)));
            
            #line default
            #line hidden
            this.Write("& playerSetup, ");
            
            #line 52 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.GameState)));
            
            #line default
            #line hidden
            this.Write("& gameState, ");
            
            #line 52 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.PlayerState)));
            
            #line default
            #line hidden
            this.Write("& playerState);\r\n            ");
            
            #line 53 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

foreach (GameClass c in CxxHelper.Definition.Class.Values)
{
    
            
            #line default
            #line hidden
            this.Write("\r\n            template<> void SerializeInternal(");
            
            #line 58 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(c.Name)));
            
            #line default
            #line hidden
            this.Write("& data, std::stringstream& buffer, Serializer::IdMap& ids, ");
            
            #line 58 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.GameSetup)));
            
            #line default
            #line hidden
            this.Write("& gameSetup, ");
            
            #line 58 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.PlayerSetup)));
            
            #line default
            #line hidden
            this.Write("& playerSetup, ");
            
            #line 58 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.GameState)));
            
            #line default
            #line hidden
            this.Write("& gameState, ");
            
            #line 58 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.PlayerState)));
            
            #line default
            #line hidden
            this.Write("& playerState);");
            
            #line 58 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

}
            
foreach (GameClass c in CxxHelper.Definition.Class.Values)
{
    
            
            #line default
            #line hidden
            this.Write("\r\n\r\n            template<> void SerializeInternal(");
            
            #line 66 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(c.Name)));
            
            #line default
            #line hidden
            this.Write("& data, std::stringstream& buffer, Serializer::IdMap& ids, ");
            
            #line 66 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.GameSetup)));
            
            #line default
            #line hidden
            this.Write("& gameSetup, ");
            
            #line 66 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.PlayerSetup)));
            
            #line default
            #line hidden
            this.Write("& playerSetup, ");
            
            #line 66 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.GameState)));
            
            #line default
            #line hidden
            this.Write("& gameState, ");
            
            #line 66 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.PlayerState)));
            
            #line default
            #line hidden
            this.Write("& playerState)\r\n            {");
            
            #line 67 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

    if (c.HasId && !c.Id.Index)
    {
        
            
            #line default
            #line hidden
            this.Write("\r\n                ids.");
            
            #line 72 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(c.Name)));
            
            #line default
            #line hidden
            this.Write("[data.");
            
            #line 72 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(c.Id.Member[0])));
            
            #line default
            #line hidden
            this.Write("] = &data;");
            
            #line 72 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

    }
    foreach (ClassMember m in c.Member)
    {
        if ((c.HasId && c.Id.Index && c.Id.Member.Contains(m.Name)) || (m.Index == ClassMemberIndexType.MappedFromStrong))
        {
            continue;
        }
        
            
            #line default
            #line hidden
            this.Write("\r\n                {");
            
            #line 82 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

        if (m.Array != 0)
        {
            for (int i = 0; i < m.Array; ++i)
            {
                
            
            #line default
            #line hidden
            this.Write("\r\n                    int size");
            
            #line 89 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(" = (int)(");
            
            #line 89 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                if (i != 0)
                {
                    
            
            #line default
            #line hidden
            this.Write("size");
            
            #line 92 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i - 1));
            
            #line default
            #line hidden
            this.Write(" == 0 ? 0 : ");
            
            #line 92 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                }
                
            
            #line default
            #line hidden
            this.Write("data.");
            
            #line 94 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(m.Name)));
            
            #line default
            #line hidden
            
            #line 94 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                for (int j = 0; j < i; ++j)
                {
                    
            
            #line default
            #line hidden
            this.Write("[0]");
            
            #line 97 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                }
                
            
            #line default
            #line hidden
            this.Write(".size());\r\n                    buffer << size");
            
            #line 100 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(" << \" \";");
            
            #line 100 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

            }
        }
        if (m.Condition != null && m.Condition.Type == ConditionType.While && m.Array != 0)
        {
            
            
            #line default
            #line hidden
            this.Write("                    bool executeLoop = true;");
            
            #line 106 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

        }
        string arrayIdxSuffix = "";
        for (int i = 0; i < m.Array; ++i)
        {
            
            
            #line default
            #line hidden
            this.Write("\r\n                    for (int idx");
            
            #line 113 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(" = 0; idx");
            
            #line 113 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(" < size");
            
            #line 113 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write("; ++idx");
            
            #line 113 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i));
            
            #line default
            #line hidden
            this.Write(")\r\n                    {");
            
            #line 114 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

            this.PushIndent("    ");
            arrayIdxSuffix += string.Format("[idx{0}]", i);
        }
        switch (CxxHelper.Definition.GetBasicType(m.Type))
        {
            case BasicType.Char:
            case BasicType.Enum:
                
            
            #line default
            #line hidden
            this.Write("                \r\n                    buffer << (int)data.");
            
            #line 124 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(m.Name)));
            
            #line default
            #line hidden
            
            #line 124 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(arrayIdxSuffix));
            
            #line default
            #line hidden
            this.Write(" << \" \";");
            
            #line 124 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                break;
            case BasicType.Class:
                if (m.Condition != null)
                {
                    
            
            #line default
            #line hidden
            this.Write("                    \r\n                    if (");
            
            #line 131 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                    if (m.Condition.Type == ConditionType.While)
                    {
                        
            
            #line default
            #line hidden
            this.Write("(executeLoop = (executeLoop && ");
            
            #line 134 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                    }
                    
            
            #line default
            #line hidden
            this.Write("data.");
            
            #line 136 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(m.Name)));
            
            #line default
            #line hidden
            
            #line 136 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(arrayIdxSuffix));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 136 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(m.Condition.Function)));
            
            #line default
            #line hidden
            this.Write("(gameSetup, playerSetup, gameState, playerState))");
            
            #line 136 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                    if (m.Condition.Type == ConditionType.While)
                    {
                        
            
            #line default
            #line hidden
            this.Write("))");
            
            #line 139 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                    }
                    
            
            #line default
            #line hidden
            this.Write("\r\n                    {");
            
            #line 143 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                    this.PushIndent("    ");
                }
                if (m.Index == ClassMemberIndexType.RefId)
                {
                    GameClass mType = CxxHelper.Definition.Class[m.Type];
                    foreach (string mId in mType.Id.Member)
                    {
                        
            
            #line default
            #line hidden
            this.Write("\r\n                    if (data.");
            
            #line 153 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(m.Name)));
            
            #line default
            #line hidden
            
            #line 153 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(arrayIdxSuffix));
            
            #line default
            #line hidden
            this.Write(" == nullptr)\r\n                    {\r\n                        buffer << -1 << \" \";" +
                    "\r\n                    }\r\n                    else\r\n                    {");
            
            #line 158 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                        switch (CxxHelper.Definition.GetBasicType(mType.MemberMap[mId].Type))
                        {
                        case BasicType.Char:
                        case BasicType.Enum:
                            
            
            #line default
            #line hidden
            this.Write("                \r\n                        buffer << (int)data.");
            
            #line 165 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(m.Name)));
            
            #line default
            #line hidden
            
            #line 165 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(arrayIdxSuffix));
            
            #line default
            #line hidden
            this.Write("->");
            
            #line 165 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(mId)));
            
            #line default
            #line hidden
            this.Write(" << \" \";");
            
            #line 165 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                            break;
                        default:
                            
            
            #line default
            #line hidden
            this.Write("                \r\n                        buffer << data.");
            
            #line 170 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(m.Name)));
            
            #line default
            #line hidden
            
            #line 170 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(arrayIdxSuffix));
            
            #line default
            #line hidden
            this.Write("->");
            
            #line 170 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(mId)));
            
            #line default
            #line hidden
            this.Write(" << \" \";");
            
            #line 170 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                            break;
                            
                        }
                        
            
            #line default
            #line hidden
            this.Write("\r\n                    }");
            
            #line 176 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                    }
                    
            
            #line default
            #line hidden
            this.Write("\r\n                    }");
            
            #line 180 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                }
                else
                {
                    
            
            #line default
            #line hidden
            this.Write("\r\n                    SerializeInternal(data.");
            
            #line 186 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(m.Name)));
            
            #line default
            #line hidden
            
            #line 186 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(arrayIdxSuffix));
            
            #line default
            #line hidden
            this.Write(", buffer, ids, gameSetup, playerSetup, gameState, playerState);");
            
            #line 186 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                }
                if (m.Condition != null)
                {
                    this.PopIndent();
                    
            
            #line default
            #line hidden
            this.Write("\r\n                    }");
            
            #line 193 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                }
                break;
            default:
                
            
            #line default
            #line hidden
            this.Write("                \r\n                    buffer << data.");
            
            #line 199 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(m.Name)));
            
            #line default
            #line hidden
            
            #line 199 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(arrayIdxSuffix));
            
            #line default
            #line hidden
            this.Write(" << \" \";");
            
            #line 199 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                break;
        }
        for (int i = 0; i < m.Array; ++i)
        {
            this.PopIndent();
            
            
            #line default
            #line hidden
            this.Write("\r\n                    }");
            
            #line 207 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

        }
        
            
            #line default
            #line hidden
            this.Write("\r\n                }");
            
            #line 211 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

    }
    
            
            #line default
            #line hidden
            this.Write("\r\n            }");
            
            #line 215 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

}

            
            #line default
            #line hidden
            this.Write("\r\n        }\r\n\r\n        std::string Serializer::SerializeSetup(");
            
            #line 221 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.GameSetup)));
            
            #line default
            #line hidden
            this.Write("& gameSetup, ");
            
            #line 221 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.PlayerSetup)));
            
            #line default
            #line hidden
            this.Write("& playerSetup, ");
            
            #line 221 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.GameState)));
            
            #line default
            #line hidden
            this.Write("& gameState, ");
            
            #line 221 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.PlayerState)));
            
            #line default
            #line hidden
            this.Write(@"& playerState)
        {
            std::stringstream buffer;
            gameSetupId.Clear();
            buffer << playerSetup.id << '\n';
            SerializeInternal(gameSetup, buffer, gameSetupId, gameSetup, playerSetup, gameState, playerState);
            buffer << '\n';
            return buffer.str();
        }

        std::string Serializer::SerializeState(");
            
            #line 231 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.GameSetup)));
            
            #line default
            #line hidden
            this.Write("& gameSetup, ");
            
            #line 231 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.PlayerSetup)));
            
            #line default
            #line hidden
            this.Write("& playerSetup, ");
            
            #line 231 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.GameState)));
            
            #line default
            #line hidden
            this.Write("& gameState, ");
            
            #line 231 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.PlayerState)));
            
            #line default
            #line hidden
            this.Write(@"& playerState)
        {
            std::stringstream buffer;
            gameStateId.Clear();
            SerializeInternal(gameState, buffer, gameStateId, gameSetup, playerSetup, gameState, playerState);
            buffer << '\n';
            return buffer.str();
        }

        bool Serializer::ExecuteOrder(const std::string& order, ");
            
            #line 240 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.GameSetup)));
            
            #line default
            #line hidden
            this.Write("& gameSetup, ");
            
            #line 240 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(CxxHelper.Definition.Config.GameState)));
            
            #line default
            #line hidden
            this.Write("& gameState, int currentPlayerId)\r\n        {\r\n            const char* buf = order" +
                    ".c_str();\r\n            int _methodId = ReadNext<int>(buf);\r\n            switch (" +
                    "_methodId)\r\n            {");
            
            #line 245 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

    foreach (GameFile f in CxxHelper.Definition.Files)
    {
        foreach (GameClass c in f.Class)
        {
            foreach (ClassMethod m in c.Method)
            {
                
            
            #line default
            #line hidden
            this.Write("\r\n                case ");
            
            #line 254 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(m.MethodId));
            
            #line default
            #line hidden
            this.Write(":\r\n                {");
            
            #line 255 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                if (c.Id.Index)
                {
                    
            
            #line default
            #line hidden
            this.Write("\r\n                    ");
            
            #line 260 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(c.Name)));
            
            #line default
            #line hidden
            this.Write(" argThisTmp;");
            
            #line 260 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                    foreach (string mId in c.Id.Member)
                    {
                        
            
            #line default
            #line hidden
            this.Write("\r\n                    argThisTmp.");
            
            #line 265 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(mId)));
            
            #line default
            #line hidden
            this.Write(" = ReadNext<");
            
            #line 265 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CxxHelper.GetBasicTypeName(CxxHelper.Definition.GetBasicType(c.MemberMap[mId].Type))));
            
            #line default
            #line hidden
            this.Write(">(buf);");
            
            #line 265 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                    }
                    
            
            #line default
            #line hidden
            this.Write("                    \r\n                    ");
            
            #line 269 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(c.Name)));
            
            #line default
            #line hidden
            this.Write("& argThis = ");
            
            #line 269 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Id.Source.FormatMapping(Case.LowerCamelCase, "argThisTmp", "gameSetup", "gameState")));
            
            #line default
            #line hidden
            this.Write(";");
            
            #line 269 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                }
                else
                {
                    
            
            #line default
            #line hidden
            this.Write("                    \r\n                    ");
            
            #line 275 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CxxHelper.GetBasicTypeName(CxxHelper.Definition.GetBasicType(c.MemberMap[c.Id.Member[0]].Type))));
            
            #line default
            #line hidden
            this.Write(" argThisId = ReadNext<");
            
            #line 275 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CxxHelper.GetBasicTypeName(CxxHelper.Definition.GetBasicType(c.MemberMap[c.Id.Member[0]].Type))));
            
            #line default
            #line hidden
            this.Write(">(buf);\r\n                    auto argThisIt = gameStateId.");
            
            #line 276 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(c.Name)));
            
            #line default
            #line hidden
            this.Write(".find(argThisId);\r\n                    if (argThisIt == gameStateId.");
            
            #line 277 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(c.Name)));
            
            #line default
            #line hidden
            this.Write(".end())\r\n                    {\r\n                        argThisIt = gameSetupId.");
            
            #line 279 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(c.Name)));
            
            #line default
            #line hidden
            this.Write(".find(argThisId);\r\n                        if (argThisIt == gameSetupId.");
            
            #line 280 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(c.Name)));
            
            #line default
            #line hidden
            this.Write(".end())\r\n                            return false;\r\n                    }\r\n      " +
                    "              ");
            
            #line 283 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(c.Name)));
            
            #line default
            #line hidden
            this.Write("& argThis = *(argThisIt->second);");
            
            #line 283 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                }
                foreach (MethodParam a in m.Param)
                {
                    BasicType type = CxxHelper.Definition.GetBasicType(a.Type);
                    if (type == BasicType.Class)
                    {
                        GameClass aType = CxxHelper.Definition.Class[a.Type];
                        if (aType.Id.Index)
                        {
                            
            
            #line default
            #line hidden
            this.Write("\r\n                    ");
            
            #line 295 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(a.Type)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 295 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Name)));
            
            #line default
            #line hidden
            this.Write("_tmp;");
            
            #line 295 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                            foreach (string mId in aType.Id.Member)
                            {
                                
            
            #line default
            #line hidden
            this.Write("\r\n                    ");
            
            #line 300 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Name)));
            
            #line default
            #line hidden
            this.Write("_tmp.");
            
            #line 300 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(mId)));
            
            #line default
            #line hidden
            this.Write(" = ReadNext<");
            
            #line 300 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CxxHelper.GetBasicTypeName(CxxHelper.Definition.GetBasicType(c.MemberMap[mId].Type))));
            
            #line default
            #line hidden
            this.Write(">(buf);");
            
            #line 300 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                            }
                            
            
            #line default
            #line hidden
            this.Write("                    \r\n                    ");
            
            #line 304 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(a.Type)));
            
            #line default
            #line hidden
            this.Write("& ");
            
            #line 304 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Name)));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 304 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(c.Id.Source.FormatMapping(Case.LowerCamelCase, string.Format("{0}_tmp", Case.LowerCamelCase.Convert(a.Name)), "gameSetup", "gameState")));
            
            #line default
            #line hidden
            this.Write(";");
            
            #line 304 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                        }
                        else
                        {
                            
            
            #line default
            #line hidden
            this.Write("                    \r\n                    ");
            
            #line 310 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CxxHelper.GetBasicTypeName(CxxHelper.Definition.GetBasicType(aType.MemberMap[aType.Id.Member[0]].Type))));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 310 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Name)));
            
            #line default
            #line hidden
            this.Write("_id = ReadNext<");
            
            #line 310 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CxxHelper.GetBasicTypeName(CxxHelper.Definition.GetBasicType(aType.MemberMap[aType.Id.Member[0]].Type))));
            
            #line default
            #line hidden
            this.Write(">(buf);\r\n                    auto ");
            
            #line 311 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Name)));
            
            #line default
            #line hidden
            this.Write("_it = gameStateId.");
            
            #line 311 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Type)));
            
            #line default
            #line hidden
            this.Write(".find(");
            
            #line 311 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Name)));
            
            #line default
            #line hidden
            this.Write("_id);\r\n                    if (");
            
            #line 312 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Name)));
            
            #line default
            #line hidden
            this.Write("_it == gameStateId.");
            
            #line 312 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Type)));
            
            #line default
            #line hidden
            this.Write(".end())\r\n                    {\r\n                        ");
            
            #line 314 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Name)));
            
            #line default
            #line hidden
            this.Write("_it = gameSetupId.");
            
            #line 314 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Type)));
            
            #line default
            #line hidden
            this.Write(".find(");
            
            #line 314 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Name)));
            
            #line default
            #line hidden
            this.Write("_id);\r\n                        if (");
            
            #line 315 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Name)));
            
            #line default
            #line hidden
            this.Write("_it == gameSetupId.");
            
            #line 315 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Type)));
            
            #line default
            #line hidden
            this.Write(".end())\r\n                            return false;\r\n                    }\r\n      " +
                    "              ");
            
            #line 318 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(a.Type)));
            
            #line default
            #line hidden
            this.Write("& ");
            
            #line 318 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Name)));
            
            #line default
            #line hidden
            this.Write(" = *(");
            
            #line 318 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Name)));
            
            #line default
            #line hidden
            this.Write("_it->second);");
            
            #line 318 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                        }
                    }
                    else if (type == BasicType.Enum)
                    {
                        
            
            #line default
            #line hidden
            this.Write("\r\n                    ");
            
            #line 325 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(a.Type)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 325 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Name)));
            
            #line default
            #line hidden
            this.Write(" = ReadNext<");
            
            #line 325 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(a.Type)));
            
            #line default
            #line hidden
            this.Write(">(buf);");
            
            #line 325 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                    }
                    else
                    {
                        
            
            #line default
            #line hidden
            this.Write("\r\n                    ");
            
            #line 331 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CxxHelper.GetBasicTypeName(type)));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 331 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Name)));
            
            #line default
            #line hidden
            this.Write(" = ReadNext<");
            
            #line 331 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CxxHelper.GetBasicTypeName(type)));
            
            #line default
            #line hidden
            this.Write(">(buf);");
            
            #line 331 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                    }
                }
                
            
            #line default
            #line hidden
            this.Write("\r\n                    return argThis.");
            
            #line 336 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.CamelCase.Convert(m.Name)));
            
            #line default
            #line hidden
            this.Write("(gameSetup, gameSetup.player[currentPlayerId], gameState, gameState.player[curren" +
                    "tPlayerId]");
            
            #line 336 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                foreach (MethodParam a in m.Param)
                {
                    
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 339 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Case.LowerCamelCase.Convert(a.Name)));
            
            #line default
            #line hidden
            
            #line 339 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

                }
                
            
            #line default
            #line hidden
            this.Write(");\r\n                }");
            
            #line 342 "D:\ugly\CodeGenerator\cxx\CxxSerializationCode.tt"

            }
        }
    }
            
            #line default
            #line hidden
            this.Write("\r\n                default:\r\n                    return false;\r\n            }\r\n   " +
                    "     }\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public class CxxSerializationCodeBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
